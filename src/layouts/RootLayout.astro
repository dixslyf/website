---
import "@/styles/global.css";

import { ClientRouter } from "astro:transitions";

import { Navbar, Splash, LoadingIndicator } from "@/components";
import { Center, Stack } from "@/components/primitives";
---

<html>
  <head>
    <meta charset="utf-8" />
    <!--
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.svg"
    />
    -->
    <meta
      name="viewport"
      content="width=device-width"
    />
    <title>dixslyf</title>

    <ClientRouter />

    <script>
      import { swapFunctions } from "astro:transitions/client";

      import { animate } from "motion";

      import { currentUrl, registerCurrentUrlHook } from "@/stores/eager-current-url";
      import { exitSlideDirection } from "@/utils/routes";

      // Custom swap function to only replace the main element instead of body.
      function swap(newDoc: Document) {
        swapFunctions.deselectScripts(newDoc);
        swapFunctions.swapRootAttributes(newDoc);
        swapFunctions.swapHeadElements(newDoc);

        const restoreFocusFunction = swapFunctions.saveFocus();

        // Only swap the <main> element instead of the <body>.
        const oldMain = document.querySelector("main")!;
        const newMain = newDoc.querySelector("main")!;
        swapFunctions.swapBodyElement(newMain, oldMain);

        restoreFocusFunction();
      }

      document.addEventListener("astro:before-swap", (event) => {
        // WARN: This is a hack to have custom, dynamic exit animations.
        // The swap function seen by Astro is a no-op. We instead call the
        // actual swap function after the custom animation completes asynchronously.
        // Currently, this doesn't cause any side effects, but that is not guaranteed
        // to always be the case.

        // Exit animation.
        const exitDirection = exitSlideDirection(event.from, event.to);
        const main = document.querySelector("main")!;
        const anim = animate(
          main,
          { x: exitDirection === "left" ? "-25rem" : "25rem", opacity: 0 },
          { duration: 0.5, ease: "easeInOut" },
        );

        anim.finished.then(() => {
          swap(event.newDocument);
        });

        event.swap = () => {};
      });

      currentUrl.set(Astro.url);
      registerCurrentUrlHook();
    </script>
  </head>

  <body>
    <LoadingIndicator />
    <div class="root">
      <Splash client:load />

      <Center gutters="0">
        <Stack gap="var(--space-xl)">
          <header>
            <Navbar transition:persist="navbar" />
          </header>
          <main>
            <slot />
          </main>
        </Stack>
      </Center>
    </div>
  </body>
</html>

<style>
  .root {
    padding-top: var(--space-m-l);
    padding-bottom: var(--space-xl-2xl);
    padding-inline: var(--space-m);

    overflow: hidden;
  }
</style>

<style is:global>
  @keyframes slideOut {
    from {
      opacity: 1;
      transform: none;
    }

    to {
      opacity: 0;
      transform: translateX(25rem);
    }
  }
</style>
